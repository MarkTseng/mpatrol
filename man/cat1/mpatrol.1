


MPATROL(1)               mpatrol library               MPATROL(1)


NNAAMMEE
       mpatrol - runs programs using the mpatrol library

SSYYNNOOPPSSIISS
       mmppaattrrooll [_o_p_t_i_o_n_s] <_c_o_m_m_a_n_d> [_a_r_g_u_m_e_n_t_s]

DDEESSCCRRIIPPTTIIOONN
       The mmppaattrrooll command is used to set various mpatrol library
       _o_p_t_i_o_n_s when running _c_o_m_m_a_n_d with its _a_r_g_u_m_e_n_t_s.  In  most
       cases,  _c_o_m_m_a_n_d  must  have  been  linked with the mpatrol
       library, unless the _-_d option is used in which  case  _c_o_m_-
       _m_a_n_d need only have been dynamically linked.

       All  mpatrol library diagnostics are sent to the file _m_p_a_-
       _t_r_o_l_._%_n_._l_o_g in the current directory by default (where  _%_n
       is  the  current process id) but this can be changed using
       the --ll option.  Similarly, the  default  profiling  output
       filename  is  _m_p_a_t_r_o_l_._%_n_._o_u_t.  Note that the LLOOGGAALLLL option
       is always implicitly used for commands  that  are  run  by
       this command.

OOPPTTIIOONNSS
       All of the following options (except --dd and --VV) correspond
       to their listed mpatrol library  option.   See  mmppaattrrooll(3)
       for more details on these options.

       --11 <_u_n_s_i_g_n_e_d _i_n_t_e_g_e_r>
              [SSMMAALLLLBBOOUUNNDD]   Specifies  the  limit in bytes up to
              which memory allocations should  be  classified  as
              small allocations for profiling purposes.

       --22 <_u_n_s_i_g_n_e_d _i_n_t_e_g_e_r>
              [MMEEDDIIUUMMBBOOUUNNDD]   Specifies  the limit in bytes up to
              which memory allocations should  be  classified  as
              medium allocations for profiling purposes.

       --33 <_u_n_s_i_g_n_e_d _i_n_t_e_g_e_r>
              [LLAARRGGEEBBOOUUNNDD]   Specifies  the  limit in bytes up to
              which memory allocations should  be  classified  as
              large allocations for profiling purposes.

       --AA <_u_n_s_i_g_n_e_d _i_n_t_e_g_e_r>
              [AALLLLOOCCSSTTOOPP]  Specifies an allocation index at which
              to stop the program when it is being allocated.

       --aa <_u_n_s_i_g_n_e_d _i_n_t_e_g_e_r>
              [AALLLLOOCCBBYYTTEE]  Specifies an 8-bit byte  pattern  with
              which to prefill newly-allocated memory.

       --CC <_u_n_s_i_g_n_e_d _r_a_n_g_e>
              [CCHHEECCKK]  Specifies a range of allocation indices at
              which to check the integrity  of  free  memory  and
              overflow buffers.




Release 1.2                12 May 2000                          1





MPATROL(1)               mpatrol library               MPATROL(1)


       --cc     [CCHHEECCKKAALLLL]   Specifies  that all arguments to func-
              tions which  allocate,  reallocate  and  deallocate
              memory have rigorous checks performed on them.

       --DD <_u_n_s_i_g_n_e_d _i_n_t_e_g_e_r>
              [DDEEFFAALLIIGGNN]   Specifies  the  default  alignment for
              general-purpose memory allocations, which must be a
              power of two.

       --dd     Specifies  that programs which were not linked with
              the mpatrol library should also be traced, but only
              if  they were dynamically linked.  This option will
              only work if the  system  dynamic  linker  has  the
              ability  to  preload a set of user-specified shared
              libraries via a special environment variable.

       --ee <_s_t_r_i_n_g>
              [PPRROOGGFFIILLEE]  Specifies an alternative filename  with
              which  to locate the executable file containing the
              program's symbols.

       --FF <_u_n_s_i_g_n_e_d _i_n_t_e_g_e_r>
              [FFRREEEESSTTOOPP]  Specifies an allocation index at  which
              to stop the program when it is being freed.

       --ff <_u_n_s_i_g_n_e_d _i_n_t_e_g_e_r>
              [FFRREEEEBBYYTTEE]   Specifies  an  8-bit byte pattern with
              which to prefill newly-freed memory.

       --GG     [SSAAFFEESSIIGGNNAALLSS]  Instructs the library  to  save  and
              replace  certain  signal handlers during the execu-
              tion of library code and  to  restore  them  after-
              wards.

       --gg     [UUSSEEDDEEBBUUGG]   Specifies  that any debugging informa-
              tion in the  executable  file  should  be  used  to
              obtain additional source-level information.

       --LL <_u_n_s_i_g_n_e_d _i_n_t_e_g_e_r>
              [LLIIMMIITT]   Specifies the limit in bytes at which all
              memory allocations should fail if the  total  allo-
              cated memory should increase beyond this.

       --ll <_s_t_r_i_n_g>
              [LLOOGGFFIILLEE]   Specifies  an alternative file in which
              to place all diagnostics from the mpatrol  library.

       --mm     [UUSSEEMMMMAAPP]   Specifies  that  the library should use
              mmmmaapp(()) instead of ssbbrrkk(()) to allocate system memory.

       --NN     [NNOOPPRROOTTEECCTT]   Specifies  that the mpatrol library's
              internal data structures should not be  made  read-
              only after every memory allocation, reallocation or
              deallocation.



Release 1.2                12 May 2000                          2





MPATROL(1)               mpatrol library               MPATROL(1)


       --nn     [NNOOFFRREEEE]  Specifies that the mpatrol library should
              keep  all reallocated and freed memory allocations.

       --OO <_u_n_s_i_g_n_e_d _i_n_t_e_g_e_r>
              [OOFFLLOOWWSSIIZZEE]  Specifies the size in bytes to use for
              all overflow buffers, which must be a power of two.

       --oo <_u_n_s_i_g_n_e_d _i_n_t_e_g_e_r>
              [OOFFLLOOWWBBYYTTEE]  Specifies an 8-bit byte  pattern  with
              which  to  fill  the overflow buffers of all memory
              allocations.

       --PP <_s_t_r_i_n_g>
              [PPRROOFFFFIILLEE]  Specifies an alternative file in  which
              to  place  all memory allocation profiling informa-
              tion from the mpatrol library.

       --pp     [PPRROOFF]  Specifies that all memory  allocations  are
              to  be  profiled  and  sent to the profiling output
              file.

       --QQ <_u_n_s_i_g_n_e_d _i_n_t_e_g_e_r>
              [AAUUTTOOSSAAVVEE]  Specifies the  frequency  at  which  to
              periodically  write  the profiling data to the pro-
              filing output file.

       --RR <_u_n_s_i_g_n_e_d _i_n_t_e_g_e_r>
              [RREEAALLLLOOCCSSTTOOPP]  Specifies  an  allocation  index  at
              which  to stop the program when a memory allocation
              is being reallocated.

       --SS     [SSHHOOWWMMAAPP & SSHHOOWWSSYYMMBBOOLLSS]  Specifies  that  a  memory
              map  of the entire heap and a summary of all of the
              function symbols read from the program's executable
              file should be displayed at the end of program exe-
              cution.

       --ss     [SSHHOOWWFFRREEEEDD & SSHHOOWWUUNNFFRREEEEDD]  Specifies that a summary
              of  all of the freed and unfreed memory allocations
              should be displayed at the end  of  program  execu-
              tion.

       --UU <_u_n_s_i_g_n_e_d _i_n_t_e_g_e_r>
              [UUNNFFRREEEEDDAABBOORRTT]   Specifies  the  minimum  number of
              unfreed allocations at which to abort  the  program
              just before program termination.

       --VV     Displays the version number of the mmppaattrrooll command.

       --vv     [PPRREESSEERRVVEE]  Specifies that any reallocated or freed
              memory  allocations  should preserve their original
              contents.

       --ww     [OOFFLLOOWWWWAATTCCHH]   Specifies  that  watch  point  areas



Release 1.2                12 May 2000                          3





MPATROL(1)               mpatrol library               MPATROL(1)


              should  be  used  for  overflow buffers rather than
              filling with the overflow byte.

       --XX     [PPAAGGEEAALLLLOOCC=_U_P_P_E_R]  Specifies that  each  individual
              memory  allocation  should occupy at least one page
              of virtual memory and should be placed at the high-
              est point within these pages.

       --xx     [PPAAGGEEAALLLLOOCC=_L_O_W_E_R]   Specifies  that each individual
              memory allocation should occupy at least  one  page
              of  virtual memory and should be placed at the low-
              est point within these pages.

       --ZZ <_u_n_s_i_g_n_e_d _i_n_t_e_g_e_r>
              [FFAAIILLSSEEEEDD]  Specifies the random number seed  which
              will  be used when determining which memory alloca-
              tions will randomly fail.

       --zz <_u_n_s_i_g_n_e_d _i_n_t_e_g_e_r>
              [FFAAIILLFFRREEQQ]  Specifies the frequency  at  which  all
              memory allocations will randomly fail.

SSEEEE AALLSSOO
       mmlleeaakk(1), mmpprrooff(1), mmppaattrrooll(3).

       The mpatrol manual, reference card and FAQ.

       http://www.cbmamiga.demon.co.uk/mpatrol/

AAUUTTHHOORR
       Graeme S. Roy <graeme@epc.co.uk>

CCOOPPYYRRIIGGHHTT
       Copyright (C) 1997-2000 Graeme S. Roy <graeme@epc.co.uk>

       This  library  is  free  software; you can redistribute it
       and/or modify it under the terms of the GNU  Library  Gen-
       eral  Public  License  as  published  by the Free Software
       Foundation; either version 2 of the License, or  (at  your
       option) any later version.

       This  library  is  distributed in the hope that it will be
       useful, but WITHOUT ANY WARRANTY; without even the implied
       warranty  of  MERCHANTABILITY  or FITNESS FOR A PARTICULAR
       PURPOSE.  See the GNU Library General Public  License  for
       more details.

       You should have received a copy of the GNU Library General
       Public License along with this library; if not,  write  to
       the Free Software Foundation, Inc., 59 Temple Place, Suite
       330, Boston, MA 02111-1307, USA.






Release 1.2                12 May 2000                          4


